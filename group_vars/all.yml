package_dir: '/etc/ansible/package'
## harbor
harbor_keepalived_vip: 192.168.163.120
harbor_keepalived_virtual_router_id: '120'
harbor_keepalived_vrrp_instance_interface: eth0
harbor_tar: '{{ package_dir }}/harbor/harbor.tar.gz'
harbor_root_dir: '/data01/harbor'
harbor_port: '80'
harbor_password: 'test123Test'
harbor_data_volume: '{{ harbor_root_dir }}/harbor-data'

# docker
image_repository: '{{ harbor_keepalived_vip }}:{{ harbor_port }}'
docker_insecure_registries:
  - '{{ image_repository }}'
docker_data_root: '/data01/docker'

# nginx
nginx_root_dir: '/data01/nginx'
nginx_image: '{{ image_repository }}/public/nginx:1.21.1'
nginx_keepalived_vip: 192.168.163.125
traefik_web_port: 31001
nginx_keepalived_virtual_router_id: '125'
nginx_keepalived_vrrp_instance_interface: eth0

# es
es_root_dir: '/data01/es'
es_cluster_name: 'es-cluster-7.3.2'
es_image: '{{ image_repository }}/public/elasticsearch:7.13.2'
es_java_opts: '-Xms16G -Xmx16G'

# kafka
zookeeper_image: '{{ image_repository }}/public/zookeeper-official:3.7'
kafka_image: '{{ image_repository }}/public/kafka:2.13-2.7.0'
kafka_root_dir: '/data01/kafka'
kafka_heap_opts: '-Xmx16G -Xms16G'

# jdk
jdk_dir: '/data01/jdk1.8.0_202'
# roketmq
mq_work_dir: '/data01/rocketmq'
mq_package_dir: '{{ package_dir }}/rocketmq'
mq_user: 'rocketmq'
mq_user_pass: 'rocketmq123'
mq_data_root_dir: '/data01/rocketmq'
# ravencast
ravencast_xms_xmx_args: '-Xms4096m -Xmx16384m'
ravencast_root_dir: '/data01/ravencast'

# k8s
k8s_keepalived_vip: 192.168.163.123
k8s_keepalived_virtual_router_id: '123'
k8s_keepalived_vrrp_instance_interface: eth0

# kubernetes
control_plane_endpoint: '{{ k8s_keepalived_vip }}:6443'
google_image_repository: '{{ image_repository }}/google_containers'
pod_network_cidr: '10.244.0.0/16'
kubernetes_version: '1.18.19'
component_manifest_dir: '/data01/kube-manifest'
etcd_backup_dir: '/data01/etcd'
# elk
elk_manifest_root_dir: '{{ component_manifest_dir }}/elk'

# monitor
nfs_server: '192.168.160.35'
nfs_path: '/data01/k8s-test-pv'
monitor_manifest_root_dir: '{{ component_manifest_dir }}/monitor'
prometheus_storage: '20Gi'
prometheus_data_retention: '35d'
grafana_storage: '20Gi'

# redis
redis_data_dir: '/data01/redis'
redis_image: '{{ image_repository }}/public/redis:6.2.4'
redis_maxmemory: '51539607552'

# component result file
kube_component_file: '{{ component_manifest_dir }}/kube-component.md'

# etcd backup
etcd_backup_root_dir: '/data01/etcd'