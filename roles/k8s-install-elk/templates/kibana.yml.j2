apiVersion: v1
kind: ConfigMap
metadata:
  name: kibana-config
  namespace: elk
data:
  kibana.yml: |
    server.host: "0.0.0.0"
    server.publicBaseUrl: "http://kibana{{ domain_suffix }}.cicem.fa"
    elasticsearch.hosts: {{ es_hosts_arr_http }}
    monitoring.ui.container.elasticsearch.enabled: true
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: elk
  labels:
    app: kibana
spec:
  replicas: 1
  template:
    metadata:
      name: kibana
      labels:
        app: kibana
    spec:
      containers:
        - name: kibana
          image: "{{ image_repository }}/public/kibana:7.16.2"
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: '1'
              memory: 3Gi
            requests:
              cpu: 50m
              memory: 500Mi
          volumeMounts:
            - mountPath: /usr/share/kibana/config/kibana.yml
              subPath: kibana.yml
              name: kibana-config
      restartPolicy: Always
      tolerations:
        - key: node.kubernetes.io/not-ready
          operator: Exists
          effect: NoExecute
          tolerationSeconds: 2
        - key: node.kubernetes.io/unreachable
          operator: Exists
          effect: NoExecute
          tolerationSeconds: 2

      volumes:
        - name: kibana-config
          configMap:
            name: kibana-config
      securityContext:
        runAsUser: 1000
        runAsNonRoot: true
  selector:
    matchLabels:
      app: kibana
---
apiVersion: v1
kind: Service
metadata:
  name: kibana
  namespace: elk
spec:
  selector:
    app: kibana
  ports:
    - port: 5601
  type: ClusterIP
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: kibana
  namespace: elk
spec:
  entryPoints:
    - web
  routes:
    - kind: Rule
      match: Host(`kibana{{ domain_suffix }}.cicem.fa`)
      services:
        - name: kibana
          port: 5601