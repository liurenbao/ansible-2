- name: redis connect string
  shell: |
    redis_connect_string='{{ groups["redis"] | map("regex_replace", "^(.*)$","\1:6379") | join(",") }}'
    echo $redis_connect_string
  register: redis_connect_string

- name: rocketmq namesrv
  shell: |
    rocketmq_namesrv="{{ rocketmq_namesrv_str }}"
    echo $rocketmq_namesrv
  register: rocketmq_namesrv

- name: copy kube-component file
  template:
    src: kube-component.md.j2
    dest: '{{ kube_component_file }}'
    mode: 0755

- name: kubernetes dashboard
  vars:
    dashboard_url: 'https://k8s-dashboard{{ domain_suffix }}.cicem.fa:30000'
  shell: |
    namespaces=$(kubectl get secret -A | grep admin | awk '{print $1}')
    for namespace in ${namespaces[@]} ; do
        token=$(kubectl -n $namespace describe secret $(kubectl -n $namespace get secret | grep admin | awk '{print $1}') | grep "token:")
        echo "| k8s-dashboard-$namespace | {{ dashboard_url }} | $token |" >> {{ kube_component_file }}
    done

- name: ravencast dashboard
  vars:
    ravencast_groups: '{{ groups | select("match","ravencast-.*") | list }}'
  shell: |
    {% for group_name in ravencast_groups %}
      ravencast_dashboard="{{ groups[group_name] | map('regex_replace', '^(.*)$','\1:10101') | join(',') }}"
      echo "| {{ group_name }} | $ravencast_dashboard | ravencast/integration |" >> {{ kube_component_file }}
    {% endfor %}

- name: fetch result to ansible node
  fetch:
    src: '{{ kube_component_file }}'
    dest: '/etc/ansible'