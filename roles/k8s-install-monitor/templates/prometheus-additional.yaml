# km create secret generic prometheus-additional --from-file prometheus-additional.yaml
- job_name: 'kubernetes-service-endpoints'
  kubernetes_sd_configs:
    - role: endpoints
  relabel_configs:
    - source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_scrape ]
      action: keep
      regex: true
    - source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_scheme ]
      action: replace
      target_label: __scheme__
      regex: (https?)
    - source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_path ]
      action: replace
      target_label: __metrics_path__
      regex: (.+)
    - source_labels: [ __address__, __meta_kubernetes_service_annotation_prometheus_io_port ]
      action: replace
      target_label: __address__
      regex: ([^:]+)(?::\d+)?;(\d+)
      replacement: $1:$2
    - action: labelmap
      regex: __meta_kubernetes_service_label_(.+)
    - source_labels: [ __meta_kubernetes_namespace ]
      action: replace
      target_label: kubernetes_namespace
    - source_labels: [ __meta_kubernetes_service_name ]
      action: replace
      target_label: kubernetes_name

- job_name: 'kubernetes-http-services'
  metrics_path: /probe
  params:
    module: [ http_2xx ]  # 使用定义的http模块
  kubernetes_sd_configs:
    - role: service  # service 类型的服务发现
  relabel_configs:
    # 只有service的annotation中配置了 prometheus.io/http_probe=true 的才进行发现
    - source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_http_probe ]
      action: keep
      regex: true
    - source_labels: [ __meta_kubernetes_service_name, __meta_kubernetes_namespace, __meta_kubernetes_service_annotation_prometheus_io_http_probe_port, __meta_kubernetes_service_annotation_prometheus_io_http_probe_path ]
      action: replace
      target_label: __param_target
      regex: (.+);(.+);(.+);(.+)
      replacement: $1.$2:$3$4
    - target_label: __address__
      replacement: blackbox:9115
    - source_labels: [ __param_target ]
      target_label: instance
    - action: labelmap
      regex: __meta_kubernetes_service_label_(.+)
    - source_labels: [ __meta_kubernetes_namespace ]
      target_label: kubernetes_namespace
    - source_labels: [ __meta_kubernetes_service_name ]
      target_label: kubernetes_name

- job_name: 'kubernetes-tcp-service'
  metrics_path: /probe
  params:
    module: [ tcp_connect ]
  kubernetes_sd_configs:
    - role: service
  relabel_configs:
    - source_labels: [ __meta_kubernetes_service_annotation_prometheus_io_tcp_probe ]
      action: keep
      regex: true
    - source_labels: [ __address__ ]
      target_label: __param_target
    - target_label: __address__
      replacement: blackbox:9115
    - source_labels: [ __param_target ]
      target_label: instance
    - action: labelmap
      regex: __meta_kubernetes_ingress_label_(.+)
    - source_labels: [ __meta_kubernetes_namespace ]
      target_label: kubernetes_namespace
    - source_labels: [ __meta_kubernetes_ingress_name ]
      target_label: kubernetes_name