- name: create dir
  file:
    path: "{{ component_manifest_dir }}/app"
    state: directory

- name: copy app manifest template
  template:
    src: '{{ item.src }}'
    dest: "{{ component_manifest_dir }}/app/{{ item.path | regex_replace('\\.j2$', '') }}"
  with_filetree: templates/
  when: item.state == 'file'

#- name: apply template manifest
#  shell: "kubectl apply -f {{ component_manifest_dir }}/app/"

#- name: copy app manifest file
#  synchronize:
#    src: files/
#    dest: "{{ component_manifest_dir }}/app/"


#- name: apply mes manifest
#  shell: "kubectl apply -f {{ component_manifest_dir }}/app/mes"
#
#- name: apply rms manifest
#  shell: "kubectl apply -f {{ component_manifest_dir }}/app/rms"
#
#- name: apply spc manifest
#  shell: "kubectl apply -f {{ component_manifest_dir }}/app/spc"
#
#- name: apply ams manifest
#  shell: "kubectl apply -f {{ component_manifest_dir }}/app/ams"
#
#- name: apply rtd zookeeper
#  shell: "helm upgrade --install rtd-zookeeper -n rtd ."
#  args:
#    chdir: "{{ component_manifest_dir }}/app/rtd/zookeeper"
#
#- name: apply rtd rtd-web
#  shell: "helm upgrade --install rtd-web -n rtd ."
#  args:
#    chdir: "{{ component_manifest_dir }}/app/rtd/rtd-web"
#
#- name: apply rtd ruleengine
#  shell: "helm upgrade --install rtd-ruleengine -n rtd ."
#  args:
#    chdir: "{{ component_manifest_dir }}/app/rtd/ruleengine"
#
#- name: apply rtd workflow
#  shell: "helm upgrade --install workflow -n rtd ."
#  args:
#    chdir: "{{ component_manifest_dir }}/app/rtd/workflow"