# Default values for rtd.
# # This is a YAML-formatted file.
# # Declare variables to be passed into your templates.
rtd_common:
  Host: rtd-uat.icrd.com
  #Host: rtd-test.fanli.inhuawei.com 
  zk_host_surfix: 'zookeeper'
  zk_port: '2181'
  zk_node: '/rtd'
  zk_enable: 'true'
  file_server_type: 'NAS'

web:
  replicaCount: 1
  image:
    repository: 192.168.160.47:8888/full-auto/rtd/rtd-web
    tag: "11.4"
    #repository: IP:port/full-auto-test/rtd-web
    #repository: 10.243.36.7:80/rtd/rtd-web
    #tag: 20211103.63444-dev 
    pullPolicy: Always
  PathPrefix: /

  env:
    - name: SERVER_PORT
      value: '80'

  resources: 
    limits:
      cpu: "1"
      memory: 1024Mi
    requests:
      cpu: "0.1"
      memory: 100Mi
  service:
    #NodePort
    #type: ClusterIP
    type: NodePort
    nodeport: 30829
    port: 80
    targetPort: 80
    protocol: TCP
    name: http

  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - topologyKey: kubernetes.io/hostname
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - rtd-web
workflow:
  replicaCount: 1
  image:
    repository: 192.168.160.47:8888/full-auto/rtd/rtd-workflow
    tag: "11.4"
    #repository: 10.243.36.7:80/rtd/rtd-workflow
    #tag: 20211103.63473-dev
    pullPolicy: Always
  PathPrefix: /workflow/

  env:
    db_ip: 192.168.160.58
    #db_ip: 10.247.139.143
    db_port: 15400
    db_user_name: 'rtd'
    #db_user_pwd:  "Huawei@123"
    db_user_pwd: "ENC(F8Rj+7/4BZwgsgrc8F9IxZrgclWSfKL6)"
    ravencast_hosts: 192.168.160.63:10101?fallbackToPrimary=true&pingTimeout=20000
    #ravencast_hosts: 10.247.4.8:10101;10.247.4.8:10201?fallbackToPrimary=true&pingTimeout=20000
    ravencast_session: rtd_server
    ravencast_channel: "/Rtd/NextDispatchRequest"
    #ravencast_channel: "/Rtd/Test/NextDispatchRequest"
  resources: 
    limits:
      cpu: '2'
      memory: 2Gi
    requests:
      cpu: 10m
      memory: 50Mi
  service:
    type: ClusterIP
    port: 80
    targetPort: 8080
    protocol: TCP
    name: http
     
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - topologyKey: kubernetes.io/hostname
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - rtd-workflow
ruleengine:
  replicaCount: 1
  image:
    repository: 192.168.160.47:8888/full-auto/rtd/ruleengine
    tag: "11.4"
    #repository: 10.243.36.7:80/rtd/ruleengine
    #tag: 20211103.63388-develop
    pullPolicy: Always
  PathPrefix: /ruleengine/

  resources: 
    limits:
      cpu: '2'
      memory: 2Gi
    requests:
      cpu: 10m
      memory: 50Mi

  volumeMounts:
    - name: rtd-data
      mountPath: "/data"
  
  volumes:
     - name: rtd-data
       nfs:
       ## TODO: modify path and nfs server IP
         path: /data01/rtd
         server: 192.168.163.158
  service:
    type: ClusterIP
    port: 80
    targetPort: 80
    protocol: TCP
    name: http

  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - topologyKey: kubernetes.io/hostname
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - rtd-ruleengine

zookeeper:
  image:
    repository: 192.168.160.47:8888/full-auto/rtd/zk
    tag: "3.7.0"
    #repository: 10.243.36.7:80/rtd/zookeeper
    #tag: 3.7.0-debian-10-r127
    pullPolicy: IfNotPresent
    pullSecrets: [name: harbor]
  persistence:
    # TODO: modify storageClass name for zk applying storage.
    storageClass: "nfs-storage"
    #storageClass: "nfs-client"
    accessModes:
      - ReadWriteMany
    size: 8Gi
    dataLogDir:
      size: 8Gi

  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - topologyKey: kubernetes.io/hostname
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - zookeeper 
imagePullSecrets: [name: harbor]
 
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

ingress:
  enabled: false

nodeSelector: {}

tolerations: []

affinity: {}
