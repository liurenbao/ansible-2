# Default values for workflow.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: 192.168.160.47:8888/full-auto/rtd/rtd-workflow
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.3"

imagePullSecrets: 
  [name: myregistrykey]
env:
  - name: SPRING_PROFILES_ACTIVE
    value: test
  - name: SERVER_PORT
    value: '8080'
  - name: DB_IP
    value: 192.168.163.248
  - name: DB_PORT
    value: '15400'
  - name: DB_USER_NAME
    value: RTD
  - name: DB_USER_PWD
    value: Huawei@123
  - name: DB_USER_NAME_QUARTZ
    value: RTD_QUARZ
  - name: WORKFLOW_ENGINE_ENDPOINT
    value: ruleengine.rtd:80
  - name: DATASOURCE_AGENT_ENDPOINT
    value: rtd-datasource.rtd:80
  - name: FILE_SERVER_TYPE
    value: NAS
  - name: FILE_PATH
    value: /usr/importFile
  - name: ZK_TIME_OUT
    value: '40000'
  - name: ZK_HOST
    value: rtd-zookeeper
  - name: ZK_PORT
    value: '2181'
  - name: RTD_NODE_PATH
    value: /rtd
  - name: GRPC_ENDPOINT
    value: rtd-ruleengine
  - name: GRPC_ENDPOINT_PORT
    value: '8999'
  - name: ZOOKEEPER_ENABLE
    value: 'true'
  - name: RAVENCAST_ENABLE
    value: 'true'
  - name: RAVENCAST_IP
    value: 192.168.163.14
  - name: RAVENCAST_PORT
    value: '10101'
  - name: RAVENCAST_SESSION
    value: rtd_server
  - name: RAVENCAST_CHANNEL
    value: /Rtd/NextDispatchRequest/v3

livenessProbe:
  httpGet:
    path: /workflow/v1/health
    port: 8080
    scheme: HTTP
  initialDelaySeconds: 400
  timeoutSeconds: 10
  periodSeconds: 10
  successThreshold: 1
  failureThreshold: 3
readinessProbe:
  httpGet:
    path: /workflow/v1/health
    port: 8080
    scheme: HTTP
  timeoutSeconds: 10
  periodSeconds: 10
  successThreshold: 1
  failureThreshold: 3

name: rtd-workflow
nameOverride: "rtd-workflow"
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
      - path: /
        backend:
          serviceName: chart-example.local
          servicePort: 80
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

Host: rtd-dev.fullauto.inhuawei.com
PathPrefix: /workflow/

resources: 
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: '2'
    memory: 2Gi
  requests:
    cpu: 10m
    memory: 50Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

#nodeSelector: 
#  scope: rtd

tolerations: 
  - key: node.kubernetes.io/unreachable
    operator: Exists
    effect: NoExecute
    tolerationSeconds: 2
  - key: node.kubernetes.io/not-ready
    operator: Exists
    effect: NoExecute
    tolerationSeconds: 2

affinity: 
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: cad-t2-notshare
              operator: NotIn
              values:
                - 'true'
