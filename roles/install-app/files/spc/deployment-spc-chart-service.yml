---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: spc-chart-service
  namespace: spc
spec:
  entryPoints:
    - web
  routes:
    - match: PathPrefix(`/spc-chart-service/`)
      kind: Rule
      services:
        - name: spc-chart-service
          port: 80
---
apiVersion: v1
kind: Service
metadata:
  name: spc-chart-service
  namespace: spc
  # annotations:
  #   # 使用http检测应用可用性，手动提供支持http检测的端口
  #   prometheus.io/http-probe: "true"
  #   prometheus.io/http-probe-port: "8080"
  #   prometheus.io/http-probe-path: "/spc-chart-service/health/healthz"

  #   # 抓取应用的监控指标,路径不填写则为：/metrics
  #   prometheus.io/scrape: "true"
  #   prometheus.io/port: '8080'
  #   prometheus.io/scheme: "http"
  #   prometheus.io/path: '/spc-chart-service/actuator/prometheus'
spec:
  ports:
    - name: http
      port: 80
      targetPort: 80
  selector:
    app: spc-chart-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spc-chart-service
  namespace: spc
spec:
  replicas: 2
  selector:
    matchLabels:
      app: spc-chart-service
  template:
    metadata:
      labels:
        app: spc-chart-service
    spec:
      hostNetwork: false
      tolerations:
        - key: "node.kubernetes.io/unreachable"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 2
        - key: "node.kubernetes.io/not-ready"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 2
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                topologyKey: "kubernetes.io/hostname"
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - spc-chart-service
              weight: 100
      containers:
        - name: spc-chart-service
          image: 192.168.160.47:8888/spc-sit/spc-chart-service:2.0.0-exercise
          ports:
            - containerPort: 80
          # 存活性探针 和 准备就绪探针
          resources:
            limits:
              cpu: "2"
              memory: 2048Mi
            requests:
              cpu: 20m
              memory: 200Mi
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 80
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 80
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          # 0宕机(zero-downtime)更新
          lifecycle:
            preStop:
              exec:
                command: [ "/bin/sh", "-c", "sleep 30" ]
