apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: spc-service
  namespace: spc
spec:
  entryPoints:
    - web
  routes:
    - kind: Rule
      match: PathPrefix(`/spc-service/`)
      services:
        - name: spc-service
          port: 8080
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: grpc-spc-service
  namespace: spc
spec:
  entryPoints:
    - g-spc-service
  routes:
    - kind: Rule
      match: PathPrefix(`/`)
      services:
        - name: spc-service
          port: 9090
          scheme: h2c
---
apiVersion: v1
kind: Service
metadata:
  name: spc-service
  namespace: spc
  annotations:
    # 使用http检测应用可用性，手动提供支持http检测的端口
    prometheus.io/http-probe: "true"
    prometheus.io/http-probe-port: "8080"
    prometheus.io/http-probe-path: "/spc-service/health/healthz"

    # 抓取应用的监控指标,路径不填写则为：/metrics
    prometheus.io/scrape: "true"
    prometheus.io/port: '8080'
    prometheus.io/scheme: "http"
    prometheus.io/path: '/spc-service/actuator/prometheus'
spec:
  ports:
    - name: http
      port: 8080
      targetPort: 8080
    - name: grpc
      port: 9090
      targetPort: 9090
      nodePort: 30138
  selector:
    app: spc-service
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spc-service
  namespace: spc
spec:
  replicas: 2
  selector:
    matchLabels:
      app: spc-service
  template:
    metadata:
      labels:
        app: spc-service
    spec:
      hostNetwork: false
      tolerations:
        - key: "node.kubernetes.io/unreachable"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 2
        - key: "node.kubernetes.io/not-ready"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 2
      containers:
        - name: spc-service
          image: 192.168.160.47:8888/spc-sit/spc-service:2.0.0-exercise
          imagePullPolicy: IfNotPresent
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: k8s
            - name: SERVER_PORT
              value: "8080"
            - name: GRPC_SERVER_PORT
              value: "9090"
            - name: JAVA_TOOL_OPTIONS
              value: "-XX:+UseG1GC -XX:MaxRAMPercentage=75.0"
            - name: spring.redis.cluster.nodes
              value: "192.168.163.142:6379,192.168.163.202:6379,192.168.163.140:6379,192.168.163.164:6379,192.168.163.174:6379,192.168.163.189:6379"
            - name: spring.datasource.druid.url
              value: "jdbc:zenith:@192.168.163.247:15400"
            - name: spring.datasource.druid.password
              value: "duYEzDss7AceLaknaneaSdV1Do5rxK8/2NeFEYflRDcxhWKx3DEpg7O9fk47Ftu4pRqEhXEOM8YG7ErGNyoNKg=="
            - name: spring.datasource.druid.public-key
              value: "MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAI12BE5GG0+M/nxJh23cjDAeYlw+9e9vijw+YhnIKGbsVJkzcOj2sYcn+d7GasKXcL6jmtFnl2eBxVYtUXvl3UUCAwEAAQ=="
            - name: rocket.name-server
              value: "192.168.163.174:9876;192.168.163.189:9876"
            - name: spc.base-url
              value: "http://192.168.163.251/spc/"
            - name: system.notUseLdap
              value: "true"
            - name: buttons.ocap-button
              value: "false"
            - name: buttons.fwp-button
              value: "false"
            - name: ravencast.address
              value: "192.168.163.141:10101;192.168.163.178:10101"
            - name: ravencast.spcServerChannel
              value: "/MPT1/SPCServer"
            - name: ravencast.mesServerChannel
              value: "/MPT1/MESServer"
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: "2"
              memory: 3Gi
            requests:
              cpu: "1"
              memory: 2Gi
          # 存活性探针 和 准备就绪探针
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /spc-service/health/
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 20
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /spc-service/health/
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          # 0宕机(zero-downtime)更新
          lifecycle:
            preStop:
              exec:
                command: [ "/bin/sh", "-c", "sleep 30" ]
