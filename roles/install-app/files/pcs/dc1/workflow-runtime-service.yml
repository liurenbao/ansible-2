---
apiVersion: v1
kind: Service
metadata:
  name: workflow-runtime-service
  namespace: pcs
  annotations:
    prometheus.io/http-probe: "true"
    prometheus.io/http-probe-port: "8080"
    prometheus.io/http-probe-path: "/workflow-runtime/flower/health/check"
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/scheme: "http"
    prometheus.io/path: "/workflow-runtime/actuator/prometheus"
spec:
  ports:
    - name: http
      port: 8080
      targetPort: 8080
  selector:
    app: workflow-runtime-service
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: workflow-runtime-service
  namespace: pcs
spec:
  entryPoints:
    - web
  routes:
    - kind: Rule
      match: PathPrefix(`/workflow-runtime`) && Host(`pcs-uat.cicem.fa`)
      services:
        - name: workflow-runtime-service
          port: 8080
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-config
  namespace: pcs
  labels:
    k8s-app: workflow-runtime-service
data:
  filebeat.yml: |-
    filebeat.inputs:
      - type: log
        enabled: true
        paths:
          - /data/workflow/logs/runtime/flow.log
        json.keys_under_root: true
        tags: ["apc_flow_log"]
        fields:
          index: 'apc-flow-log'
      - type: log
        enabled: true
        paths:
          - /data/workflow/logs/runtime/node.log
        json.keys_under_root: true
        tags: ["apc_flow_node_log"]
        fields:
          index: 'apc-flow-node-log'

    output.elasticsearch:
      hosts: ["elasticsearch.elk:9200"]
      indices:
        - index: "apc-flow-log"
          when.contains:
            fields:
              index: 'apc-flow-log'
        - index: "apc-flow-node-log"
          when.contains:
            fields:
              index: 'apc-flow-node-log'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: workflow-runtime-service-dc1
  namespace: pcs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: workflow-runtime-service
      zone: dc1
  template:
    metadata:
      labels:
        app: workflow-runtime-service
        zone: dc1
    spec:
      volumes:
        - name: data
          emptyDir: { }
        - name: logdata
          emptyDir: { }
        - name: config
          configMap:
            name: filebeat-config
            defaultMode: 0744
        - name: tz-config
          hostPath:
            path: /usr/share/zoneinfo/Asia/Shanghai
      imagePullSecrets:
        - name: harbor
      hostNetwork: false
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                topologyKey: "kubernetes.io/hostname"
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - workflow-runtime-service
              weight: 100
      tolerations:
        - key: "node.kubernetes.io/unreachable"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 2
        - key: "node.kubernetes.io/not-ready"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 2
      nodeSelector:
        zone: dc1
      initContainers:
        - command:
            - sysctl
            - -w
            - net.ipv4.tcp_keepalive_time=10
            - net.ipv4.tcp_keepalive_probes=2
            - net.ipv4.tcp_keepalive_intvl=5
          image: 10.12.107.150:80/public/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: systemctl
          securityContext:
            privileged: true
      containers:
        - name: workflow-runtime-service
          image: 10.12.107.150:80/pcs-test/workflow-runtime-service:1.0.0-2021120978504
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: tz-config
              mountPath: /etc/localtime
            - name: logdata
              mountPath: /data
            - name: data
              mountPath: /usr/share/filebeat/data
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "prod_i"
            - name: SERVER_PORT
              value: "8080"
            - name: DB_HOST
              value: "10.12.117.115"
            - name: DB_PORT
              value: "15400"
            - name: DB_USER
              value: "encrypted.AumCaFwY6UgTYc+RezNwmpypja5PfA+HsAmh5u6qGKBF"
            - name: DB_PWD
              value: "encrypted.AtwKHsrWko2QOKtbos037KNHlDviuYj/KvA+09lsj0o1"
            - name: REDIS_NODES
              value: "10.12.117.151:6379,10.12.117.152:6379,10.12.117.153:6379,10.12.117.154:6379,10.12.117.155:6379,10.12.117.156:6379"
            - name: ES_HOST
              value: "elasticsearch.elk"
            - name: ES_PORT
              value: "9200"
            - name: ROCKETMQ_NODES
              value: "10.12.117.141:9876;10.12.117.142:9876"
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: "2"
              memory: 2048Mi
            requests:
              cpu: "0.5"
              memory: 1024Mi
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /workflow-runtime/flower/health/check
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 20
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /workflow-runtime/flower/health/check
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          startupProbe:
            httpGet:
              port: 8080
              path: /workflow-runtime/flower/health/check
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 3
            successThreshold: 1
            failureThreshold: 3
        - name: filebeat
          image: '10.12.107.150:80/public/elastic/filebeat:7.13.2'
          volumeMounts:
            - mountPath: /opt/filebeat/filebeat.yml
              subPath: filebeat.yml
              name: config
            - name: logdata
              mountPath: /data
          args:
            - '-c'
            - /opt/filebeat/filebeat.yml
            - '-e'
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: pod_name
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
          resources:
            limits:
              cpu: "1"
              memory: 200Mi
            requests:
              cpu: "0.1"
              memory: 100Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent