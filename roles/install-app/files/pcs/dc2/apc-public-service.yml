apiVersion: apps/v1
kind: Deployment
metadata:
  name: apc-public-service-dc2
  namespace: pcs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: apc-public-service
      zone: dc2
  template:
    metadata:
      labels:
        app: apc-public-service
        zone: dc2
    spec:
      imagePullSecrets:
        - name: harbor
      hostNetwork: false
      tolerations:
        - key: "node.kubernetes.io/unreachable"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 2
        - key: "node.kubernetes.io/not-ready"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 2
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                topologyKey: "kubernetes.io/hostname"
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - apc-public-service
              weight: 100
      nodeSelector:
        zone: dc2
      initContainers:
        - command:
          - sysctl
          - -w
          - net.ipv4.tcp_keepalive_time=10
          - net.ipv4.tcp_keepalive_probes=2
          - net.ipv4.tcp_keepalive_intvl=5
          image: 10.12.107.150:80/public/busybox:1.34
          imagePullPolicy: IfNotPresent
          name: systemctl
          securityContext:
             privileged: true
      volumes:
        - name: tz-config
          hostPath:
           path: /usr/share/zoneinfo/Asia/Shanghai
      containers:
        - name: apc-public-service
          image: 10.12.107.150:80/pcs-test/apc-public-service:1.0.0-2021120978502
          imagePullPolicy: IfNotPresent
          volumeMounts:
          - name: tz-config
            mountPath: /etc/localtime
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: prod_i
            - name: SERVER_PORT
              value: "8080"
            - name: DB_HOST
              value: "10.12.117.115"
            - name: DB_PORT
              value: "15400"
            - name: DB_USER
              value: "encrypted.AumCaFwY6UgTYc+RezNwmpypja5PfA+HsAmh5u6qGKBF"
            - name: DB_PWD
              value: "encrypted.AtwKHsrWko2QOKtbos037KNHlDviuYj/KvA+09lsj0o1"
            - name: REDIS_NODES
              value: "10.12.117.151:6379,10.12.117.152:6379,10.12.117.153:6379,10.12.117.154:6379,10.12.117.155:6379,10.12.117.156:6379"
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: "2"
              memory: 2048Mi
            requests:
              cpu: "0.2"
              memory: 1024Mi
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /apcui-public/api/tool/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 20
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /apcui-public/api/tool/health
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10            
          startupProbe:
            httpGet:
              port: 8080
              path: /apcui-public/api/tool/health
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 3
            successThreshold: 1
            failureThreshold: 3