- name: change sysconf
  lineinfile:
    line: "{{ item }}"
    path: /etc/sysctl.conf
  with_items:
    - "net.ipv4.ip_local_port_range = 1024 65000"
    - "net.ipv4.tcp_window_scaling = 1"
    - "net.core.somaxconn = 262144"
    - "net.core.netdev_max_backlog = 5000"
    - "net.ipv4.tcp_fin_timeout = 30"
    - "net.ipv4.tcp_keepalive_time = 30"
    - "net.ipv4.tcp_tw_reuse = 1"
    - "net.ipv4.tcp_max_tw_buckets = 10000"
    - "net.ipv4.tcp_syncookies = 1"
    - "net.ipv4.tcp_tw_recycle = 0"
    - "net.ipv6.conf.all.disable_ipv6 = 1"
    - "net.ipv6.conf.default.disable_ipv6 = 1"
    - "net.ipv6.conf.lo.disable_ipv6 = 1"
    - "net.ipv4.tcp_rmem = 4096 87380 8388608"
    - "net.ipv4.tcp_wmem = 4096 87380 8388608"
    - "net.core.rmem_max = 8388608"
    - "net.core.wmem_max = 8388608"
    - "net.ipv4.ip_forward = 0"
    - "net.ipv4.conf.all.send_redirects = 0"
    - "net.ipv4.conf.default.send_redirects = 0"

- name: sysctl enable
  shell: sysctl -p /etc/sysctl.conf

- name: refresh iptables
  shell: iptables -F

- name: change limits.conf
  lineinfile:
    dest: /etc/security/limits.conf
    line: "{{ item }}"
  with_items:
    - "* - nproc 65535"
    - "* - nofile 1048576"

- name: check docker-compose file exists
  stat:
    path: "{{ nginx_root_dir }}/docker-compose.yml"
  register: dir

- name: stop existed nginx
  shell: docker-compose down
  when: dir.stat.exists == true and down == true
  args:
    chdir: "{{ nginx_root_dir }}"

- name: remove old dir
  shell: "rm -rf {{ nginx_root_dir }}"
  when: dir.stat.exists == true

- name: create nginx root dir
  file:
    path: "{{ nginx_root_dir }}"
    state: directory

- name: send docker-compose file to remote
  template:
    src: docker-compose.yml.j2
    dest: '{{ nginx_root_dir }}/docker-compose.yml'

- name: create nginx conf dir
  file:
    path: '{{ nginx_root_dir }}/conf.d'
    state: directory

- name: send nginx.conf
  template:
    src: nginx.conf.j2
    dest: '{{ nginx_root_dir }}/nginx.conf'

- name: copy app nginx conf to remote
  template:
    src: '{{ item }}'
    dest: "{{ nginx_root_dir }}/{{ item | regex_replace('.j2$', '') }}"
  with_items:
    - conf.d/traefik.conf.j2
    - conf.d/plantu.conf.j2
    - conf.d/report{{ domain_suffix }}.conf.j2

- name: start nginx
  shell: docker-compose up -d
  args:
    chdir: '{{ nginx_root_dir }}'

- name: reload nginx conf
  shell: docker-compose exec -T nginx nginx -s reload
  args:
    chdir: '{{ nginx_root_dir }}'

- name: rotate nginx logs
  template:
    src: nginx.j2
    dest: /etc/logrotate.d/nginx

- name: wait nginx ready
  wait_for:
    port: 80
    delay: 2
    timeout: 30
    msg: 'Timeout waiting for nginx respond'

- name: check filebeat installed
  stat:
    path: /etc/filebeat/filebeat.yml
  register: filebeat_conf

- name: overide filebeat conf
  template:
    src: filebeat.yml.j2
    dest: /etc/filebeat/filebeat.yml

- name: restart filebeat
  systemd:
    name: filebeat
    state: restarted
    enabled: yes