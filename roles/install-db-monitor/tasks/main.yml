- name: create agent root dir
  file:
    path: '{{ gaussdb_monitor_agent_root_dir }}/{{ gaussdb_user }}'
    state: directory

- name: create wsr dir
  file:
    path: /wsr
    state: directory
    owner: '{{ gaussdb_user }}'
    group: '{{ gaussdb_user_group }}'

- name: send agent application.yml
  template:
    src: agent/application.yml.j2
    dest: '{{ gaussdb_monitor_agent_root_dir }}/{{ gaussdb_user }}/application.yml'

- name: send agent jar
  copy:
    src: agent/hisi-uoamp-monitor-agent-1.0-SNAPSHOT.jar
    dest: '{{ gaussdb_monitor_agent_root_dir }}/{{ gaussdb_user }}/agent.jar'

- name: copy gaussdb agent startup shell
  template:
    src: start-agent.sh.j2
    dest: '{{ gaussdb_monitor_agent_root_dir }}/{{ gaussdb_user }}/start-agent.sh'
    mode: 0755

- name: create cron job for db agent
  become_user: '{{ gaussdb_user }}'
  become: yes
  cron:
    name: gaussdb agent job
    job: 'source ~/.bashrc && {{ gaussdb_monitor_agent_root_dir }}/{{ gaussdb_user }}/start-agent.sh check'
    minute: "*/1"

- name: chmod agent dir
  file:
    path: '{{ gaussdb_monitor_agent_root_dir }}/{{ gaussdb_user }}'
    state: directory
    owner: '{{ gaussdb_user }}'
    group: '{{ gaussdb_user_group }}'
    recurse: yes

- name: send filebeat.yml
  template:
    src: filebeat.yml.j2
    dest: /etc/filebeat/filebeat.yml

- name: chmod filebeat dir
  file:
    path: '{{ item }}'
    owner: '{{ gaussdb_user }}'
    group: '{{ gaussdb_user_group }}'
    recurse: yes
  with_items:
    - /etc/filebeat
    - /var/lib/filebeat
    - /usr/share/filebeat

- name: chmod filebeat file
  file:
    path: '{{ item }}'
    owner: '{{ gaussdb_user }}'
    group: '{{ gaussdb_user_group }}'
  with_items:
    - /usr/bin/filebeat
    - /etc/rc.d/init.d/filebeat

- name: override filebeat.service
  template:
    src: filebeat.service.j2
    dest: /usr/lib/systemd/system/filebeat.service

- name: start gaussdb filebeat systemd service
  systemd:
    name: filebeat
    daemon_reload: yes
    state: restarted
    enabled: yes