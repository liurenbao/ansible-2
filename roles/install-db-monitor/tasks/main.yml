- name: set java env conf ~/.bashrc
  become: yes
  become_user: '{{ gaussdb_user }}'
  lineinfile:
    dest: '~/.bashrc'
    state: present
    line: "{{ item }}"
  with_items:
    - "export JAVA_HOME={{ jdk_dir }}"
    - "export JRE_HOME=${JAVA_HOME}/jre"
    - "export CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib"
    - "export PATH=${JAVA_HOME}/bin:$PATH"

- name: source bashrc
  become: yes
  become_user: '{{ gaussdb_user }}'
  shell: 'source ~/.bashrc'

- name: create agent root dir
  file:
    path: '{{ gaussdb_monitor_agent_root_dir }}/{{ gaussdb_user }}'
    state: directory

- name: create wsr dir
  file:
    path: /wsr
    state: directory
    owner: '{{ gaussdb_user }}'
    group: '{{ gaussdb_user_group }}'

- name: send agent application.yml
  template:
    src: agent/application.yml.j2
    dest: '{{ gaussdb_monitor_agent_root_dir }}/{{ gaussdb_user }}/application.yml'

- name: send agent jar
  copy:
    src: agent/hisi-uoamp-monitor-agent-1.0-SNAPSHOT.jar
    dest: '{{ gaussdb_monitor_agent_root_dir }}/{{ gaussdb_user }}/agent.jar'
    owner: '{{ gaussdb_user }}'
    group: '{{ gaussdb_user_group }}'

- name: chmod agent dir
  file:
    path: '{{ gaussdb_monitor_agent_root_dir }}/{{ gaussdb_user }}'
    state: directory
    owner: '{{ gaussdb_user }}'
    group: '{{ gaussdb_user_group }}'
    recurse: yes

- name: get agent pid
  shell: ps -ef | grep -v grep | grep agent.jar | awk '{print $2}'
  register: pid

- name: kill agent pid
  shell: kill -9 {{ pid.stdout }}
  when: pid.stdout != ""

#启动不起来执行以下命令
#ansible -i gaussdb-hosts gaussdb --become-user omm -m shell -a "cd /data01/gaussdb-monitor-agent/omm/ && nohup java -jar agent.jar > /dev/null 2>&1 &"

- name: check java command exists
  shell: java -version
  register: java

- name: show java command exists
  debug:
    msg: '{{ java }}'

- name: copy startup.sh
  copy:
    src: startup.sh
    dest: '{{ gaussdb_monitor_agent_root_dir }}/{{ gaussdb_user }}/startup.sh'
    mode: 0755
    owner: '{{ gaussdb_user }}'
    group: '{{ gaussdb_user_group }}'

- name: start agent
  become: yes
  become_user: '{{ gaussdb_user }}'
  shell: ./startup.sh
  register: result
  args:
    chdir: '{{ gaussdb_monitor_agent_root_dir }}/{{ gaussdb_user }}'

#- name: create filebeat dir
#  command: rm -rf /data01/filebeat/

- name: create filebeat dir
  file:
    path: '/data01/filebeat/'
    state: directory

- name: install rsync
  shell: yum install rsync -y

- name: send filebeat package
  synchronize:
    src: '{{ package_dir }}/filebeat/'
    dest: '/data01/filebeat/'

- name: send filebeat.yml
  template:
    src: filebeat.yml.j2
    dest: /data01/filebeat/filebeat-7.3.0-linux-x86_64/filebeat.yml

- name: add execute permission
  file:
    dest: '{{ item }}'
    mode: 0770
  with_items:
    - "/data01/filebeat/filebeat-7.3.0-linux-x86_64/filebeat"
    - "/data01/filebeat/filebeat_monitor.sh"
    - "/data01/filebeat/filebeat-7.3.0-linux-x86_64/start.sh"

- name: chown dir
  file:
    path: '/data01/filebeat/'
    state: directory
    owner: '{{ gaussdb_user }}'
    group: '{{ gaussdb_user_group }}'
    recurse: yes

- name: add cron job for filebeat
  cron:
    name: start filebeat
    minute: "*/2"
    job: "/data01/filebeat/filebeat_monitor.sh"
    user: '{{ gaussdb_user }}'

- name: start filebeat
  become: yes
  become_user: '{{ gaussdb_user }}'
  command: "./filebeat_monitor.sh"
  args:
    chdir: /data01/filebeat

- name: check if process started success
  become: yes
  become_user: '{{ gaussdb_user }}'
  shell: ps -ef | grep -v grep | grep -E "filebeat|agent.jar"
  register: process

- name: show process
  debug:
    msg: '{{ process.stdout_lines }}'
