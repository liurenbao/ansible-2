---

# http 代理
#- name: set http proxy
# lineinfile:
#    path: /etc/profile
#    state: present
#    regexp: '^export http_proxy'
#    line: export http_proxy={{http_proxy}}
#
#- name: set https proxy
#  lineinfile:
#    path: /etc/profile
#    state: present
#    regexp: '^export https_proxy'
#    line: export https_proxy={{http_proxy}}
#
#- name: set ftp proxy
#  lineinfile:
#    path: /etc/profile
#    state: present
#    regexp: '^export ftp_proxy'
#    line: export ftp_proxy={{http_proxy}}
#
#- name: set no_proxy
#  lineinfile:
#    path: /etc/profile
#    state: present
#    regexp: '^export no_proxy'
#    line: export no_proxy="{{no_proxy}}"

- name: disable swap
  lineinfile:
    path: /etc/profile
    state: present
    regexp: '^swapoff'
    line: swapoff -a

- name: disable swap
  shell: swapoff -a

- name: disable swap
  shell: sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

- name: disable swap
  shell: sed -i '/sysvg-swap/ s/^\(.*\)$/#\1/g' /etc/fstab

- name: enable profile
  shell: source /etc/profile

# centos 源
- name: remove cdrom repo
  shell: rm -f /etc/yum.repos.d/centos-*.repo

- name: replace yum ali source
  template:
    src: CentOS-Base.repo.j2
    dest:  /etc/yum.repos.d/CentOS-Base.repo

#- name: yum makecache
#  command: yum makecache 
#  environment:
#      http_proxy: http://10.243.42.70:3128
#      https_proxy: http://10.243.42.70:3128
  #yum: name=* state=latest 
  #yum:
  #  update_cache: yes
  #  name: '*'
  #  state: latest

# 华为CA证书
#- name: install ca-certificates
#  shell: yum install -y ca-certificates & update-ca-trust force-enable

#- name: download huawei CA
#  copy: src=/etc/pki/ca-trust/source/anchors/huaweiproxy.cer dest=/etc/pki/ca-trust/source/anchors/huaweiproxy.cer
#  shell: wget -O /etc/pki/ca-trust/source/anchors/huaweiproxy.cer http://10.243.47.87:8080/archive/cert/huaweiproxy.cer

#- name: import huawei CA
#  shell: update-ca-trust extract

# - name: 去使能 GPG 校验
#   shell: sed -i 's|gpgcheck=1|gpgcheck=0|g' /etc/yum.repos.d/CentOS-Base.repo

# 安装和配置 docekr
#- name: install docker dep
#  shell: yum install -y yum-utils 
#device-mapper-persistent-data lvm2 deltarpm

#- name: config docker source
#  shell: wget -O /etc/yum.repos.d/docker-ce.repo https://download.docker.com/linux/centos/docker-ce.repo

#- name: yum makecache
#  shell: yum makecache

#- name: install docker-ce
#  shell: yum install -y docker-ce-18.09.7-3.el7 docker-ce-cli-18.09.7-3.el7 containerd.io

#- name: set docker proxy
#  shell: mkdir -p /etc/systemd/system/docker.service.d
#
#- name: set docker proxy
#  template:
#    src: http-proxy.conf.j2
#    dest: /etc/systemd/system/docker.service.d/http-proxy.conf

- name: create docker data-root
  shell: mkdir -p /data01/var/lib/docker

- name: config docker daemon
  shell: mkdir -p /etc/docker/

- name: config docker daemon
  template:
    src: daemon.json.j2
    dest: /etc/docker/daemon.json

- name: enable docker
  shell: systemctl enable docker.service

- name: restart docker
  shell: systemctl daemon-reload

- name: restart docker 
  shell: systemctl stop docker

- name: create docker data-root
  shell: rm -rf /var/lib/docker

- name: create docker data-root
  shell: ln -s /data01/var/lib/docker  /var/lib/docker

- name: restart docker
  shell: systemctl restart docker 

# 安装和配置k8s
- name: disable firewalld
  shell: systemctl stop firewalld

- name: disable firewalld
  shell: systemctl disable firewalld

- name: disable firewalld
  shell: iptables -F && iptables -X && iptables -F -t nat && iptables -X -t nat && iptables -P FORWARD ACCEPT

- name: disable selinux
  shell: setenforce 0 || true

- name: disable selinux
  lineinfile:
    state: present
    path: /etc/selinux/config
    regexp: '^SELINUX='
    line: SELINUX=disabled

- name: config Kubernetes source
  template:
    src: kubernetes.repo.j2
    dest: /etc/yum.repos.d/kubernetes.repo

#- name: install kubernetes binary
#  shell: yum install -y kubelet-1.15.12 kubeadm-1.15.12 kubectl-1.15.12 --disableexcludes=kubernetes

- name: enable kubelet 
  shell: systemctl enable --now kubelet

- name: config k8s.conf
  template:
    src: k8s.conf.j2
    dest: /etc/sysctl.d/k8s.conf

- name: enable k8s.conf
  shell: sysctl --system

- name: restart kubelet 
  shell: systemctl daemon-reload

- name: restart kubelet 
  shell: systemctl restart kubelet
