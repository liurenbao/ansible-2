# 集群内部服务监控
apiVersion: v1
kind: Service
metadata:
  name: demo-monitoring
  namespace: test
  annotations:
    # 以下 tcp/http检测应用可用性，二选一（和健康检查不同，此处需检测应用依赖项，如消息队列，缓存，数据库等）

    # 使用tcp检测应用可用性，自动获取service的port字段
    prometheus.io/tcp-probe: "true"

    # 使用http检测应用可用性，手动提供支持http检测的端口
    prometheus.io/http-probe: "true"
    prometheus.io/http-probe-port: "8080"
    prometheus.io/http-probe-path: "/demo-monitoring/actuator/health"

    # 抓取应用的监控指标,路径不填写则为：/metrics
    prometheus.io/scrape: "true"
    prometheus.io/port: '8080'
    prometheus.io/scheme: "http"
    prometheus.io/path: '/demo-monitoring/actuator/prometheus'
spec:
  selector:
    app: demo-monitoring
  ports:
    - port: 8080
---
# 以下2组为集群外部服务的监控方式，metadata.name字段需要相同
apiVersion: v1
kind: Endpoints
metadata:
  name: ravencast-service
  namespace: test
subsets:
  # 外部服务的IP和端口
  - addresses:
      - ip: 192.168.161.208
      - ip: 192.168.161.209
    ports:
      - port: 9998
---
apiVersion: v1
kind: Service
metadata:
  name: ravencast-service
  namespace: test
  annotations:
    # 以下 tcp/http检测应用可用性，二选一（和健康检查不同，此处需检测应用依赖项，如消息队列，缓存，数据库等）

    # 使用tcp检测应用可用性，自动获取service的port字段
    prometheus.io/tcp-probe: "true"
    # 使用http检测应用可用性，手动提供支持http检测的端口
    prometheus.io/http-probe: "true"
    prometheus.io/http-probe-port: "8080"
    prometheus.io/http-probe-path: "/demo-monitoring/actuator/health"

    # 抓取应用的监控指标,路径不填写则为：/metrics
    prometheus.io/scrape: "true"
    prometheus.io/port: "9998"
    prometheus.io/scheme: "http"
    prometheus.io/path: "/"
spec:
  ports:
    - port: 9998